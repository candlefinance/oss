///
/// CurrencyAmount.hpp
/// Sat Aug 31 2024
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#if __has_include(<NitroModules/JSIConverter.hpp>)
#include <NitroModules/JSIConverter.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif
#if __has_include(<NitroModules/NitroDefines.hpp>)
#include <NitroModules/NitroDefines.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif



#include <string>

namespace margelo::nitro::financekit {

  /**
   * A struct which can be represented as a JavaScript object (CurrencyAmount).
   */
  struct CurrencyAmount {
  public:
    double amount     SWIFT_PRIVATE;
    std::string currencyCode     SWIFT_PRIVATE;

  public:
    explicit CurrencyAmount(double amount, std::string currencyCode): amount(amount), currencyCode(currencyCode) {}
  };

} // namespace margelo::nitro::financekit

namespace margelo::nitro {

  using namespace margelo::nitro::financekit;

  // C++ CurrencyAmount <> JS CurrencyAmount (object)
  template <>
  struct JSIConverter<CurrencyAmount> {
    static inline CurrencyAmount fromJSI(jsi::Runtime& runtime, const jsi::Value& arg) {
      jsi::Object obj = arg.asObject(runtime);
      return CurrencyAmount(
        JSIConverter<double>::fromJSI(runtime, obj.getProperty(runtime, "amount")),
        JSIConverter<std::string>::fromJSI(runtime, obj.getProperty(runtime, "currencyCode"))
      );
    }
    static inline jsi::Value toJSI(jsi::Runtime& runtime, const CurrencyAmount& arg) {
      jsi::Object obj(runtime);
      obj.setProperty(runtime, "amount", JSIConverter<double>::toJSI(runtime, arg.amount));
      obj.setProperty(runtime, "currencyCode", JSIConverter<std::string>::toJSI(runtime, arg.currencyCode));
      return obj;
    }
    static inline bool canConvert(jsi::Runtime& runtime, const jsi::Value& value) {
      if (!value.isObject()) {
        return false;
      }
      jsi::Object obj = value.getObject(runtime);
      if (!JSIConverter<double>::canConvert(runtime, obj.getProperty(runtime, "amount"))) return false;
      if (!JSIConverter<std::string>::canConvert(runtime, obj.getProperty(runtime, "currencyCode"))) return false;
      return true;
    }
  };

} // namespace margelo::nitro
