///
/// FinanceKitTransaction.swift
/// Sat Aug 31 2024
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

import NitroModules

/**
 * Represents an instance of `FinanceKitTransaction`, backed by a C++ struct.
 */
public typealias FinanceKitTransaction = margelo.nitro.financekit.FinanceKitTransaction

public extension FinanceKitTransaction {
  private typealias bridge = margelo.nitro.financekit.bridge.swift

  /**
   * Create a new instance of `FinanceKitTransaction`.
   */
  init(id: String, accountID: String, transactionAmount: CurrencyAmount, foreignCurrencyAmount: CurrencyAmount, creditDebitIndicator: FinanceKitCreditDebitIndicator, transactionDescription: String, originalTransactionDescription: String, merchantCategoryCode: Double, merchantName: String, transactionType: FinanceKitTransactionType, status: FinanceKitTransactionStatus, transactionDate: String, postedDate: String) {
    self.init(std.string(id), std.string(accountID), transactionAmount, foreignCurrencyAmount, creditDebitIndicator, std.string(transactionDescription), std.string(originalTransactionDescription), merchantCategoryCode, std.string(merchantName), transactionType, status, std.string(transactionDate), std.string(postedDate))
  }

  var id: String {
    @inline(__always)
    get {
      return String(self.__id)
    }
    @inline(__always)
    set {
      self.__id = std.string(newValue)
    }
  }
  
  var accountID: String {
    @inline(__always)
    get {
      return String(self.__accountID)
    }
    @inline(__always)
    set {
      self.__accountID = std.string(newValue)
    }
  }
  
  var transactionAmount: CurrencyAmount {
    @inline(__always)
    get {
      return self.__transactionAmount
    }
    @inline(__always)
    set {
      self.__transactionAmount = newValue
    }
  }
  
  var foreignCurrencyAmount: CurrencyAmount {
    @inline(__always)
    get {
      return self.__foreignCurrencyAmount
    }
    @inline(__always)
    set {
      self.__foreignCurrencyAmount = newValue
    }
  }
  
  var creditDebitIndicator: FinanceKitCreditDebitIndicator {
    @inline(__always)
    get {
      return self.__creditDebitIndicator
    }
    @inline(__always)
    set {
      self.__creditDebitIndicator = newValue
    }
  }
  
  var transactionDescription: String {
    @inline(__always)
    get {
      return String(self.__transactionDescription)
    }
    @inline(__always)
    set {
      self.__transactionDescription = std.string(newValue)
    }
  }
  
  var originalTransactionDescription: String {
    @inline(__always)
    get {
      return String(self.__originalTransactionDescription)
    }
    @inline(__always)
    set {
      self.__originalTransactionDescription = std.string(newValue)
    }
  }
  
  var merchantCategoryCode: Double {
    @inline(__always)
    get {
      return self.__merchantCategoryCode
    }
    @inline(__always)
    set {
      self.__merchantCategoryCode = newValue
    }
  }
  
  var merchantName: String {
    @inline(__always)
    get {
      return String(self.__merchantName)
    }
    @inline(__always)
    set {
      self.__merchantName = std.string(newValue)
    }
  }
  
  var transactionType: FinanceKitTransactionType {
    @inline(__always)
    get {
      return self.__transactionType
    }
    @inline(__always)
    set {
      self.__transactionType = newValue
    }
  }
  
  var status: FinanceKitTransactionStatus {
    @inline(__always)
    get {
      return self.__status
    }
    @inline(__always)
    set {
      self.__status = newValue
    }
  }
  
  var transactionDate: String {
    @inline(__always)
    get {
      return String(self.__transactionDate)
    }
    @inline(__always)
    set {
      self.__transactionDate = std.string(newValue)
    }
  }
  
  var postedDate: String {
    @inline(__always)
    get {
      return String(self.__postedDate)
    }
    @inline(__always)
    set {
      self.__postedDate = std.string(newValue)
    }
  }
}
