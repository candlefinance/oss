///
/// HybridCacheSpec.hpp
/// Fri Aug 30 2024
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/react-native-nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#if __has_include(<NitroModules/HybridObject.hpp>)
#include <NitroModules/HybridObject.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif



#include <future>
#include <string>
#include <optional>

namespace margelo::nitro::cache {

  using namespace margelo::nitro;

  /**
   * An abstract base class for `Cache`
   * Inherit this class to create instances of `HybridCacheSpec` in C++.
   * @example
   * ```cpp
   * class HybridCache: public HybridCacheSpec {
   *   // ...
   * };
   * ```
   */
  class HybridCacheSpec: public HybridObject {
    public:
      // Constructor
      explicit HybridCacheSpec(): HybridObject(TAG) { }

      // Destructor
      ~HybridCacheSpec() { }

    public:
      // Properties
      

    public:
      // Methods
      virtual std::future<void> write(const std::string& key, const std::string& value) = 0;
      virtual std::future<std::optional<std::string>> read(const std::string& key) = 0;
      virtual std::future<void> remove(const std::string& key) = 0;
      virtual std::future<void> clear() = 0;

    protected:
      // Hybrid Setup
      void loadHybridMethods() override;

    protected:
      // Tag for logging
      static constexpr auto TAG = "Cache";
  };

} // namespace margelo::nitro::cache
