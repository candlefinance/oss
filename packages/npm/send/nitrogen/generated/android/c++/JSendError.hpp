///
/// JSendError.hpp
/// Fri Aug 30 2024
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "SendError.hpp"

#include "Code.hpp"
#include "JCode.hpp"
#include <string>

namespace margelo::nitro::send {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "SendError" and the the Kotlin data class "SendError".
   */
  struct JSendError final: public jni::JavaClass<JSendError> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/candlefinance_send/SendError;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct SendError by copying all values to C++.
     */
    [[maybe_unused]]
    SendError toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldCode = clazz->getField<JCode>("code");
      jni::local_ref<JCode> code = this->getFieldValue(fieldCode);
      static const auto fieldMessage = clazz->getField<jni::JString>("message");
      jni::local_ref<jni::JString> message = this->getFieldValue(fieldMessage);
      return SendError(
        code->toCpp(),
        message->toStdString()
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JSendError::javaobject> fromCpp(const SendError& value) {
      return newInstance(
        JCode::fromCpp(value.code),
        jni::make_jstring(value.message)
      );
    }
  };

} // namespace margelo::nitro::send
