///
/// FinanceKitAccountBalance.hpp
/// Sat Aug 31 2024
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#if __has_include(<NitroModules/JSIConverter.hpp>)
#include <NitroModules/JSIConverter.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif
#if __has_include(<NitroModules/NitroDefines.hpp>)
#include <NitroModules/NitroDefines.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif

// Forward declaration of `CurrentBalance` to properly resolve imports.
namespace margelo::nitro::financekit { struct CurrentBalance; }

#include <string>
#include "CurrentBalance.hpp"

namespace margelo::nitro::financekit {

  /**
   * A struct which can be represented as a JavaScript object (FinanceKitAccountBalance).
   */
  struct FinanceKitAccountBalance {
  public:
    std::string id     SWIFT_PRIVATE;
    std::string accountID     SWIFT_PRIVATE;
    CurrentBalance currentBalance     SWIFT_PRIVATE;

  public:
    explicit FinanceKitAccountBalance(std::string id, std::string accountID, CurrentBalance currentBalance): id(id), accountID(accountID), currentBalance(currentBalance) {}
  };

} // namespace margelo::nitro::financekit

namespace margelo::nitro {

  using namespace margelo::nitro::financekit;

  // C++ FinanceKitAccountBalance <> JS FinanceKitAccountBalance (object)
  template <>
  struct JSIConverter<FinanceKitAccountBalance> {
    static inline FinanceKitAccountBalance fromJSI(jsi::Runtime& runtime, const jsi::Value& arg) {
      jsi::Object obj = arg.asObject(runtime);
      return FinanceKitAccountBalance(
        JSIConverter<std::string>::fromJSI(runtime, obj.getProperty(runtime, "id")),
        JSIConverter<std::string>::fromJSI(runtime, obj.getProperty(runtime, "accountID")),
        JSIConverter<CurrentBalance>::fromJSI(runtime, obj.getProperty(runtime, "currentBalance"))
      );
    }
    static inline jsi::Value toJSI(jsi::Runtime& runtime, const FinanceKitAccountBalance& arg) {
      jsi::Object obj(runtime);
      obj.setProperty(runtime, "id", JSIConverter<std::string>::toJSI(runtime, arg.id));
      obj.setProperty(runtime, "accountID", JSIConverter<std::string>::toJSI(runtime, arg.accountID));
      obj.setProperty(runtime, "currentBalance", JSIConverter<CurrentBalance>::toJSI(runtime, arg.currentBalance));
      return obj;
    }
    static inline bool canConvert(jsi::Runtime& runtime, const jsi::Value& value) {
      if (!value.isObject()) {
        return false;
      }
      jsi::Object obj = value.getObject(runtime);
      if (!JSIConverter<std::string>::canConvert(runtime, obj.getProperty(runtime, "id"))) return false;
      if (!JSIConverter<std::string>::canConvert(runtime, obj.getProperty(runtime, "accountID"))) return false;
      if (!JSIConverter<CurrentBalance>::canConvert(runtime, obj.getProperty(runtime, "currentBalance"))) return false;
      return true;
    }
  };

} // namespace margelo::nitro
