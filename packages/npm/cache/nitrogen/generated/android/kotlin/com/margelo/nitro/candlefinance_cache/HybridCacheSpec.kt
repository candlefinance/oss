///
/// HybridCacheSpec.kt
/// Fri Aug 30 2024
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

package com.margelo.nitro.candlefinance_cache

import android.util.Log
import androidx.annotation.Keep
import com.facebook.jni.HybridData
import com.facebook.proguard.annotations.DoNotStrip
import com.margelo.nitro.core.*

/**
 * A Kotlin class representing the Cache HybridObject.
 * Implement this abstract class to create Kotlin-based instances of Cache.
 */
@DoNotStrip
@Keep
@Suppress("RedundantSuppression", "KotlinJniMissingFunction", "PropertyName", "RedundantUnitReturnType", "unused")
abstract class HybridCacheSpec: HybridObject() {
  protected val TAG = "HybridCacheSpec"

  @DoNotStrip
  val mHybridData: HybridData = initHybrid()

  init {
    // Pass this `HybridData` through to it's base class,
    // to represent inheritance to JHybridObject on C++ side
    super.updateNative(mHybridData)
  }

  // Properties
  

  // Methods
  @DoNotStrip
  @Keep
  abstract fun write(key: String, object: String): Unit
  
  @DoNotStrip
  @Keep
  abstract fun writeAsync(key: String, object: String): Promise<Unit>
  
  @DoNotStrip
  @Keep
  abstract fun readAsync(key: String): Promise<String?>
  
  @DoNotStrip
  @Keep
  abstract fun read(key: String): String?
  
  @DoNotStrip
  @Keep
  abstract fun removeAsync(key: String): Promise<Unit>
  
  @DoNotStrip
  @Keep
  abstract fun remove(key: String): Unit
  
  @DoNotStrip
  @Keep
  abstract fun clearAsync(): Promise<Unit>
  
  @DoNotStrip
  @Keep
  abstract fun clear(): Unit

  private external fun initHybrid(): HybridData

  companion object {
    private const val TAG = "HybridCacheSpec"
    init {
      try {
        Log.i(TAG, "Loading cache C++ library...")
        System.loadLibrary("cache")
        Log.i(TAG, "Successfully loaded cache C++ library!")
      } catch (e: Error) {
        Log.e(TAG, "Failed to load cache C++ library! Is it properly installed and linked? " +
                    "Is the name correct? (see `CMakeLists.txt`, at `add_library(...)`)", e)
        throw e
      }
    }
  }
}
