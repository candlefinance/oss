///
/// HybridCacheSpecSwift.hpp
/// Thu Aug 29 2024
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/react-native-nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#include "HybridCacheSpec.hpp"

// Forward declaration of `HybridCacheSpecCxx` to properly resolve imports.
namespace candlefinance_cache { class HybridCacheSpecCxx; }





#if __has_include(<NitroModules/HybridContext.hpp>)
#include <NitroModules/HybridContext.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif

#include "candlefinance_cache-Swift-Cxx-Umbrella.hpp"

namespace margelo::nitro::cache {

  /**
   * The C++ part of HybridCacheSpecCxx.swift.
   *
   * HybridCacheSpecSwift (C++) accesses HybridCacheSpecCxx (Swift), and might
   * contain some additional bridging code for C++ <> Swift interop.
   *
   * Since this obviously introduces an overhead, I hope at some point in
   * the future, HybridCacheSpecCxx can directly inherit from the C++ class HybridCacheSpec
   * to simplify the whole structure and memory management.
   */
  class HybridCacheSpecSwift final: public HybridCacheSpec {
  public:
    // Constructor from a Swift instance
    explicit HybridCacheSpecSwift(const candlefinance_cache::HybridCacheSpecCxx& swiftPart): HybridCacheSpec(), _swiftPart(swiftPart) { }

  public:
    // Get the Swift part
    inline candlefinance_cache::HybridCacheSpecCxx getSwiftPart() noexcept { return _swiftPart; }

  public:
    // Get memory pressure
    inline size_t getExternalMemorySize() noexcept override {
      return _swiftPart.getMemorySize();
    }

  public:
    // Properties
    

  public:
    // Methods
    

  private:
    candlefinance_cache::HybridCacheSpecCxx _swiftPart;
  };

} // namespace margelo::nitro::cache
