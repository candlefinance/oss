///
/// HybridFinanceKitSpec.hpp
/// Sat Aug 31 2024
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#if __has_include(<NitroModules/HybridObject.hpp>)
#include <NitroModules/HybridObject.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif

// Forward declaration of `AuthorizationStatus` to properly resolve imports.
namespace margelo::nitro::financekit { enum class AuthorizationStatus; }
// Forward declaration of `FinanceKitTransaction` to properly resolve imports.
namespace margelo::nitro::financekit { struct FinanceKitTransaction; }
// Forward declaration of `Query` to properly resolve imports.
namespace margelo::nitro::financekit { struct Query; }
// Forward declaration of `AccountDetailsHistoryParams` to properly resolve imports.
namespace margelo::nitro::financekit { struct AccountDetailsHistoryParams; }
// Forward declaration of `Account` to properly resolve imports.
namespace margelo::nitro::financekit { struct Account; }
// Forward declaration of `AccountHistoryParams` to properly resolve imports.
namespace margelo::nitro::financekit { struct AccountHistoryParams; }
// Forward declaration of `FinanceKitAccountBalance` to properly resolve imports.
namespace margelo::nitro::financekit { struct FinanceKitAccountBalance; }

#include <future>
#include "AuthorizationStatus.hpp"
#include <vector>
#include "FinanceKitTransaction.hpp"
#include "Query.hpp"
#include "AccountDetailsHistoryParams.hpp"
#include "Account.hpp"
#include "AccountHistoryParams.hpp"
#include "FinanceKitAccountBalance.hpp"

namespace margelo::nitro::financekit {

  using namespace margelo::nitro;

  /**
   * An abstract base class for `FinanceKit`
   * Inherit this class to create instances of `HybridFinanceKitSpec` in C++.
   * @example
   * ```cpp
   * class HybridFinanceKit: public HybridFinanceKitSpec {
   *   // ...
   * };
   * ```
   */
  class HybridFinanceKitSpec: public virtual HybridObject {
    public:
      // Constructor
      explicit HybridFinanceKitSpec(): HybridObject(TAG) { }

      // Destructor
      virtual ~HybridFinanceKitSpec() { }

    public:
      // Properties
      

    public:
      // Methods
      virtual std::future<AuthorizationStatus> requestAuthorization() = 0;
      virtual std::future<AuthorizationStatus> authorizationStatus() = 0;
      virtual std::future<std::vector<FinanceKitTransaction>> transactions(const Query& query) = 0;
      virtual std::future<std::vector<FinanceKitTransaction>> transactionHistory(const AccountDetailsHistoryParams& params) = 0;
      virtual std::future<std::vector<Account>> accounts(const Query& query) = 0;
      virtual std::future<std::vector<Account>> accountHistory(const AccountHistoryParams& params) = 0;
      virtual std::future<std::vector<FinanceKitAccountBalance>> accountBalances(const Query& query) = 0;
      virtual std::future<std::vector<FinanceKitAccountBalance>> accountBalanceHistory(const AccountDetailsHistoryParams& params) = 0;

    protected:
      // Hybrid Setup
      void loadHybridMethods() override;

    protected:
      // Tag for logging
      static constexpr auto TAG = "FinanceKit";
  };

} // namespace margelo::nitro::financekit
