///
/// candlefinance_cache-Swift-Cxx-Bridge.hpp
/// Fri Aug 30 2024
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/react-native-nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

// Forward declarations of C++ defined types


// Include C++ defined types
#include <NitroModules/PromiseHolder.hpp>
#include <future>
#include <optional>
#include <string>

/**
 * Contains specialized versions of C++ templated types so they can be accessed from Swift,
 * as well as helper functions to interact with those C++ types from Swift.
 */
namespace margelo::nitro::cache::bridge::swift {

  /**
   * Specialized version of `PromiseHolder<void>`.
   */
  using PromiseHolder_void_ = PromiseHolder<void>;
  inline PromiseHolder<void> create_PromiseHolder_void_() {
    return PromiseHolder<void>();
  }
  
  /**
   * Specialized version of `std::optional<std::string>`.
   */
  using std__optional_std__string_ = std::optional<std::string>;
  inline std::optional<std::string> create_std__optional_std__string_(const std::string& value) {
    return std::optional<std::string>(value);
  }
  
  /**
   * Specialized version of `PromiseHolder<std::optional<std::string>>`.
   */
  using PromiseHolder_std__optional_std__string__ = PromiseHolder<std::optional<std::string>>;
  inline PromiseHolder<std::optional<std::string>> create_PromiseHolder_std__optional_std__string__() {
    return PromiseHolder<std::optional<std::string>>();
  }

} // namespace margelo::nitro::cache::bridge::swift
