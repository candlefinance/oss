///
/// JResponse.hpp
/// Fri Aug 30 2024
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "Response.hpp"

#include "JParameters.hpp"
#include "Parameters.hpp"
#include <optional>
#include <string>
#include <unordered_map>

namespace margelo::nitro::send {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "Response" and the the Kotlin data class "Response".
   */
  struct JResponse final: public jni::JavaClass<JResponse> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/candlefinance_send/Response;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct Response by copying all values to C++.
     */
    [[maybe_unused]]
    Response toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldStatusCode = clazz->getField<double>("statusCode");
      double statusCode = this->getFieldValue(fieldStatusCode);
      static const auto fieldHeader = clazz->getField<JParameters>("header");
      jni::local_ref<JParameters> header = this->getFieldValue(fieldHeader);
      static const auto fieldBody = clazz->getField<jni::JString>("body");
      jni::local_ref<jni::JString> body = this->getFieldValue(fieldBody);
      return Response(
        statusCode,
        header->toCpp(),
        body != nullptr ? std::make_optional(body->toStdString()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JResponse::javaobject> fromCpp(const Response& value) {
      return newInstance(
        value.statusCode,
        JParameters::fromCpp(value.header),
        value.body.has_value() ? jni::make_jstring(value.body.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::send
