///
/// HybridFinanceKitSpecSwift.hpp
/// Sat Aug 31 2024
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#include "HybridFinanceKitSpec.hpp"

// Forward declaration of `HybridFinanceKitSpecCxx` to properly resolve imports.
namespace candlefinance_financekit { class HybridFinanceKitSpecCxx; }

// Forward declaration of `AuthorizationStatus` to properly resolve imports.
namespace margelo::nitro::financekit { enum class AuthorizationStatus; }
// Forward declaration of `FinanceKitTransaction` to properly resolve imports.
namespace margelo::nitro::financekit { struct FinanceKitTransaction; }
// Forward declaration of `CurrencyAmount` to properly resolve imports.
namespace margelo::nitro::financekit { struct CurrencyAmount; }
// Forward declaration of `FinanceKitCreditDebitIndicator` to properly resolve imports.
namespace margelo::nitro::financekit { enum class FinanceKitCreditDebitIndicator; }
// Forward declaration of `FinanceKitTransactionType` to properly resolve imports.
namespace margelo::nitro::financekit { enum class FinanceKitTransactionType; }
// Forward declaration of `FinanceKitTransactionStatus` to properly resolve imports.
namespace margelo::nitro::financekit { enum class FinanceKitTransactionStatus; }
// Forward declaration of `Query` to properly resolve imports.
namespace margelo::nitro::financekit { struct Query; }
// Forward declaration of `AccountDetailsHistoryParams` to properly resolve imports.
namespace margelo::nitro::financekit { struct AccountDetailsHistoryParams; }
// Forward declaration of `Account` to properly resolve imports.
namespace margelo::nitro::financekit { struct Account; }
// Forward declaration of `AccountHistoryParams` to properly resolve imports.
namespace margelo::nitro::financekit { struct AccountHistoryParams; }
// Forward declaration of `FinanceKitAccountBalance` to properly resolve imports.
namespace margelo::nitro::financekit { struct FinanceKitAccountBalance; }
// Forward declaration of `CurrentBalance` to properly resolve imports.
namespace margelo::nitro::financekit { struct CurrentBalance; }
// Forward declaration of `Available` to properly resolve imports.
namespace margelo::nitro::financekit { struct Available; }
// Forward declaration of `Balance` to properly resolve imports.
namespace margelo::nitro::financekit { struct Balance; }
// Forward declaration of `Booked` to properly resolve imports.
namespace margelo::nitro::financekit { struct Booked; }
// Forward declaration of `AvailableAndBooked` to properly resolve imports.
namespace margelo::nitro::financekit { struct AvailableAndBooked; }

#include <future>
#include "AuthorizationStatus.hpp"
#include <NitroModules/PromiseHolder.hpp>
#include <vector>
#include "FinanceKitTransaction.hpp"
#include <string>
#include "CurrencyAmount.hpp"
#include "FinanceKitCreditDebitIndicator.hpp"
#include "FinanceKitTransactionType.hpp"
#include "FinanceKitTransactionStatus.hpp"
#include "Query.hpp"
#include "AccountDetailsHistoryParams.hpp"
#include "Account.hpp"
#include "AccountHistoryParams.hpp"
#include "FinanceKitAccountBalance.hpp"
#include "CurrentBalance.hpp"
#include "Available.hpp"
#include "Balance.hpp"
#include "Booked.hpp"
#include "AvailableAndBooked.hpp"

#if __has_include(<NitroModules/HybridContext.hpp>)
#include <NitroModules/HybridContext.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif

#include "candlefinance_financekit-Swift-Cxx-Umbrella.hpp"

namespace margelo::nitro::financekit {

  /**
   * The C++ part of HybridFinanceKitSpecCxx.swift.
   *
   * HybridFinanceKitSpecSwift (C++) accesses HybridFinanceKitSpecCxx (Swift), and might
   * contain some additional bridging code for C++ <> Swift interop.
   *
   * Since this obviously introduces an overhead, I hope at some point in
   * the future, HybridFinanceKitSpecCxx can directly inherit from the C++ class HybridFinanceKitSpec
   * to simplify the whole structure and memory management.
   */
  class HybridFinanceKitSpecSwift final: public HybridFinanceKitSpec {
  public:
    // Constructor from a Swift instance
    explicit HybridFinanceKitSpecSwift(const candlefinance_financekit::HybridFinanceKitSpecCxx& swiftPart):
      HybridObject(HybridFinanceKitSpec::TAG),
      _swiftPart(swiftPart) { }

  public:
    // Get the Swift part
    inline candlefinance_financekit::HybridFinanceKitSpecCxx getSwiftPart() noexcept { return _swiftPart; }

  public:
    // Get memory pressure
    inline size_t getExternalMemorySize() noexcept override {
      return _swiftPart.getMemorySize();
    }

  public:
    // Properties
    

  public:
    // Methods
    inline std::future<AuthorizationStatus> requestAuthorization() override {
      auto value = _swiftPart.requestAuthorization();
      return value.getFuture();
    }
    inline std::future<AuthorizationStatus> authorizationStatus() override {
      auto value = _swiftPart.authorizationStatus();
      return value.getFuture();
    }
    inline std::future<std::vector<FinanceKitTransaction>> transactions(const Query& query) override {
      auto value = _swiftPart.transactions(query);
      return value.getFuture();
    }
    inline std::future<std::vector<FinanceKitTransaction>> transactionHistory(const AccountDetailsHistoryParams& params) override {
      auto value = _swiftPart.transactionHistory(params);
      return value.getFuture();
    }
    inline std::future<std::vector<Account>> accounts(const Query& query) override {
      auto value = _swiftPart.accounts(query);
      return value.getFuture();
    }
    inline std::future<std::vector<Account>> accountHistory(const AccountHistoryParams& params) override {
      auto value = _swiftPart.accountHistory(params);
      return value.getFuture();
    }
    inline std::future<std::vector<FinanceKitAccountBalance>> accountBalances(const Query& query) override {
      auto value = _swiftPart.accountBalances(query);
      return value.getFuture();
    }
    inline std::future<std::vector<FinanceKitAccountBalance>> accountBalanceHistory(const AccountDetailsHistoryParams& params) override {
      auto value = _swiftPart.accountBalanceHistory(params);
      return value.getFuture();
    }

  private:
    candlefinance_financekit::HybridFinanceKitSpecCxx _swiftPart;
  };

} // namespace margelo::nitro::financekit
